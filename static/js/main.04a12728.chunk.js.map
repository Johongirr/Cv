{"version":3,"sources":["components/Header/Header.js","components/PersonalInfo/PersonalInfo.js","components/Education/Education.js","components/Experience/Experience.js","components/Cv/Cv.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","header","backgroundColor","textAlign","padding","title","color","Header","classes","className","Typography","variant","PersonalInfo","props","state","firstName","lastName","email","phoneNum","address","description","photo","updatePersonalInfo","bind","getBase64","e","this","setState","target","name","value","personalInfoReset","updatePersonalInfoReset","file","files","reader","FileReader","readAsDataURL","onload","result","onerror","error","console","log","style","marginTop","Grid","container","spacing","item","xs","md","FormControl","fullWidth","InputLabel","htmlFor","Input","id","onChange","type","Box","mt","TextField","label","multiline","rows","placeholder","Component","Education","university","city","degree","subject","from","to","updateEducation","education","Button","margin","onClick","deleteEducation","Experience","position","company","updateExperience","experience","deleteExperience","styles","height","display","alignItems","cvImg","maxWidth","Cv","personalInfo","p","map","exp","mr","width","educ","src","alt","overflowX","my","App","uniqid","print","addEducation","addExperience","resetAllFields","printPDF","concat","Object","assign","newEducation","filter","ed","newExperience","info","val","CssBaseline","Container","elavation","marginBottom","content","componentRef","handlePrint","ref","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04a12728.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: \"rgb(51, 51, 51)\",\r\n    textAlign: \"center\",\r\n    padding: \"1.5rem 0\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  return (\r\n    <header className={classes.header}>\r\n      <Typography className={classes.title} variant=\"h3\">\r\n        CV MAKER\r\n      </Typography>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Grid,\r\n  Box,\r\n  TextField,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nclass PersonalInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      phoneNum: \"\",\r\n      address: \"\",\r\n      description: \"\",\r\n      photo: \"\",\r\n    };\r\n    this.updatePersonalInfo = this.updatePersonalInfo.bind(this);\r\n    this.getBase64 = this.getBase64.bind(this);\r\n  }\r\n  updatePersonalInfo(e) {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n      },\r\n      () => this.props.updatePersonalInfo(this.state)\r\n    );\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.personalInfoReset) {\r\n      this.setState(\r\n        {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          phoneNum: \"\",\r\n          address: \"\",\r\n          description: \"\",\r\n          photo: \"\",\r\n        },\r\n        () => this.props.updatePersonalInfoReset(false)\r\n      );\r\n    }\r\n  }\r\n  getBase64(e) {\r\n    var file = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      this.setState(\r\n        {\r\n          photo: reader.result,\r\n        },\r\n        () => this.props.updatePersonalInfo(this.state)\r\n      );\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section style={{ marginTop: \"3rem\" }}>\r\n        <Typography variant=\"h5\">Personal Information</Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                First Name\r\n              </InputLabel>\r\n              <Input\r\n                name=\"firstName\"\r\n                value={this.state.firstName}\r\n                id=\"standard-adornment-amount\"\r\n                onChange={this.updatePersonalInfo}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                Last Name\r\n              </InputLabel>\r\n              <Input\r\n                name=\"lastName\"\r\n                value={this.state.lastName}\r\n                id=\"standard-adornment-amount\"\r\n                onChange={this.updatePersonalInfo}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">Email</InputLabel>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                id=\"standard-adornment-amount\"\r\n                onChange={this.updatePersonalInfo}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                Phone Number\r\n              </InputLabel>\r\n              <Input\r\n                name=\"phoneNum\"\r\n                value={this.state.phoneNum}\r\n                id=\"standard-adornment-amount\"\r\n                onChange={this.updatePersonalInfo}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"standard-adornment-amount\">Address</InputLabel>\r\n            <Input\r\n              name=\"address\"\r\n              value={this.state.address}\r\n              id=\"standard-adornment-amount\"\r\n              onChange={this.updatePersonalInfo}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n        <Box mt={3}>\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\r\n            <Input\r\n              type=\"file\"\r\n              name=\"photo\"\r\n              value=\"\"\r\n              id=\"standard-adornment-amount\"\r\n              onChange={this.getBase64}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <Box mt={3}>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Description\"\r\n              multiline\r\n              rows={4}\r\n              placeholder=\"Description\"\r\n              variant=\"outlined\"\r\n              name=\"description\"\r\n              value={this.state.description}\r\n              onChange={this.updatePersonalInfo}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonalInfo;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Grid,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nclass Education extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      university: \"\",\r\n      city: \"\",\r\n      degree: \"\",\r\n      subject: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n    };\r\n    this.updateEducation = this.updateEducation.bind(this);\r\n  }\r\n  updateEducation(id, e) {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n      },\r\n      () => this.props.updateEducation(this.state, id)\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <section style={{ marginTop: \"3rem\" }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                University Name\r\n              </InputLabel>\r\n              <Input\r\n                name=\"university\"\r\n                onChange={this.updateEducation.bind(\r\n                  null,\r\n                  this.props.education.id\r\n                )}\r\n                value={this.state.university}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                City Name\r\n              </InputLabel>\r\n              <Input\r\n                name=\"city\"\r\n                onChange={this.updateEducation.bind(\r\n                  null,\r\n                  this.props.education.id\r\n                )}\r\n                value={this.state.city}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                Degree\r\n              </InputLabel>\r\n              <Input\r\n                name=\"degree\"\r\n                onChange={this.updateEducation.bind(\r\n                  null,\r\n                  this.props.education.id\r\n                )}\r\n                value={this.state.degree}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                Subject\r\n              </InputLabel>\r\n              <Input\r\n                name=\"subject\"\r\n                onChange={this.updateEducation.bind(\r\n                  null,\r\n                  this.props.education.id\r\n                )}\r\n                value={this.state.subject}\r\n                placeholder=\"asdsad\"\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">From</InputLabel>\r\n              <Input\r\n                name=\"from\"\r\n                onChange={this.updateEducation.bind(\r\n                  null,\r\n                  this.props.education.id\r\n                )}\r\n                value={this.state.from}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">To</InputLabel>\r\n              <Input\r\n                name=\"to\"\r\n                onChange={this.updateEducation.bind(\r\n                  null,\r\n                  this.props.education.id\r\n                )}\r\n                value={this.state.to}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Button\r\n            style={{\r\n              padding: \".7rem 0\",\r\n              margin: \"0 .8rem\",\r\n              backgroundColor: \"darkred\",\r\n            }}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => this.props.deleteEducation(this.props.education.id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Grid>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Education;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Grid,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nclass Experience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      position: \"\",\r\n      company: \"\",\r\n      city: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n    };\r\n    this.updateExperience = this.updateExperience.bind(this);\r\n  }\r\n  updateExperience(id, e) {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n      },\r\n      () => this.props.updateExperience(this.state, id)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section style={{ marginTop: \"3rem\" }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                Position\r\n              </InputLabel>\r\n              <Input\r\n                name=\"position\"\r\n                onChange={this.updateExperience.bind(\r\n                  null,\r\n                  this.props.experience.id\r\n                )}\r\n                value={this.state.position}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                Company\r\n              </InputLabel>\r\n              <Input\r\n                name=\"company\"\r\n                onChange={this.updateExperience.bind(\r\n                  null,\r\n                  this.props.experience.id\r\n                )}\r\n                value={this.state.company}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">From</InputLabel>\r\n              <Input\r\n                name=\"from\"\r\n                onChange={this.updateExperience.bind(\r\n                  null,\r\n                  this.props.experience.id\r\n                )}\r\n                value={this.state.from}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">To</InputLabel>\r\n              <Input\r\n                name=\"to\"\r\n                onChange={this.updateExperience.bind(\r\n                  null,\r\n                  this.props.experience.id\r\n                )}\r\n                value={this.state.to}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">City</InputLabel>\r\n              <Input\r\n                name=\"city\"\r\n                onChange={this.updateExperience.bind(\r\n                  null,\r\n                  this.props.experience.id\r\n                )}\r\n                value={this.state.city}\r\n                id=\"standard-adornment-amount\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Button\r\n            style={{\r\n              padding: \".7rem 0\",\r\n              margin: \"0 .8rem\",\r\n              backgroundColor: \"darkred\",\r\n            }}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              this.props.deleteExperience(this.props.experience.id)\r\n            }\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Grid>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Container,\r\n  FormControl,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  header: {\r\n    backgroundColor: \"rgb(20, 62, 114)\",\r\n    height: \"8.5rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"0 1rem\",\r\n    color: \"#fff\",\r\n  },\r\n  cvImg: {\r\n    maxWidth: \"100%\",\r\n  },\r\n};\r\n\r\nclass Cv extends Component {\r\n  render() {\r\n    const { personalInfo, experience, education } = this.props;\r\n    return (\r\n      <section style={{ marginTop: \"3rem\" }}>\r\n        <header style={styles.header}>\r\n          <Box>\r\n            <Typography variant=\"h3\">{personalInfo.firstName}</Typography>\r\n            <Typography variant=\"h6\">{personalInfo.lastName}</Typography>\r\n          </Box>\r\n        </header>\r\n\r\n        <Box p={2}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={8} md={9}>\r\n              <Box>\r\n                <Typography variant=\"h6\">Description</Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {personalInfo.description}\r\n                </Typography>\r\n              </Box>\r\n              <Box mt={3}>\r\n                <Typography variant=\"h6\">Experience</Typography>\r\n                {experience?.map((exp) => (\r\n                  <Box mt={2} key={exp.id} display=\"flex\" alignItems=\"baseline\">\r\n                    <Box mr={10} width=\"25%\">\r\n                      <strong>\r\n                        {exp.from} - {exp.to}\r\n                      </strong>\r\n                    </Box>\r\n                    <Box>\r\n                      <strong>\r\n                        {exp.position}, {exp.city}\r\n                      </strong>\r\n                      <p>{exp.company}</p>\r\n                    </Box>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n              <Box mt={3}>\r\n                <Typography variant=\"h6\">Education</Typography>\r\n                {education?.map((educ) => (\r\n                  <Box\r\n                    mt={2}\r\n                    key={educ.id}\r\n                    display=\"flex\"\r\n                    alignItems=\"baseline\"\r\n                  >\r\n                    <Box mr={10} width=\"25%\">\r\n                      <strong>\r\n                        {educ.from} - {educ.to}\r\n                      </strong>\r\n                    </Box>\r\n                    <Box>\r\n                      <strong>\r\n                        {educ.university}, {educ.city}\r\n                      </strong>\r\n                      <p>Degree: {educ.degree}</p>\r\n                      <p>Subject: {educ.subject}</p>\r\n                    </Box>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={4} md={3}>\r\n              <img\r\n                style={styles.cvImg}\r\n                src={\r\n                  personalInfo.photo\r\n                    ? personalInfo.photo\r\n                    : \"https://michalosman.github.io/cv-application/static/media/empty_avatar.cedf234c.png\"\r\n                }\r\n                alt=\"image of the cv owner\"\r\n              />\r\n              <Box mt={2}>\r\n                <Typography variant=\"h6\">Personal Details</Typography>\r\n              </Box>\r\n              <Box mt={1}>\r\n                <strong>Address</strong>\r\n                <p style={{ overflowX: \"scroll\" }}>{personalInfo.address}</p>\r\n              </Box>\r\n              <Box my={2}>\r\n                <strong>Phone Number</strong>\r\n                <p style={{ overflowX: \"scroll\" }}>{personalInfo.phoneNum}</p>\r\n              </Box>\r\n              <Box>\r\n                <strong>Email</strong>\r\n                <p style={{ overflowX: \"scroll\" }}>{personalInfo.email}</p>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cv;\r\n","import {\n  CssBaseline,\n  Typography,\n  Grid,\n  Box,\n  Container,\n  FormControl,\n  Button,\n} from \"@material-ui/core\";\nimport Header from \"./components/Header/Header\";\nimport PersonalInfo from \"./components/PersonalInfo/PersonalInfo\";\nimport Education from \"./components/Education/Education\";\nimport Experience from \"./components/Experience/Experience\";\nimport Cv from \"./components/Cv/Cv\";\n\nimport ReactToPrint, { PrintContextConsumer } from \"react-to-print\";\nimport React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      personalInfo: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNum: \"\",\n        address: \"\",\n        description: \"\",\n        photo: \"\",\n      },\n      education: [\n        {\n          id: uniqid(),\n          university: \"\",\n          city: \"\",\n          degree: \"\",\n          subject: \"\",\n          from: \"\",\n          to: \"\",\n        },\n      ],\n      experience: [\n        {\n          id: uniqid(),\n          position: \"\",\n          company: \"\",\n          city: \"\",\n          from: \"\",\n          to: \"\",\n        },\n      ],\n      personalInfoReset: false,\n      print: false,\n    };\n    this.updatePersonalInfo = this.updatePersonalInfo.bind(this);\n    this.addEducation = this.addEducation.bind(this);\n    this.updateEducation = this.updateEducation.bind(this);\n    this.deleteEducation = this.deleteEducation.bind(this);\n    this.addExperience = this.addExperience.bind(this);\n    this.updateExperience = this.updateExperience.bind(this);\n    this.deleteExperience = this.deleteExperience.bind(this);\n    this.resetAllFields = this.resetAllFields.bind(this);\n    this.updatePersonalInfoReset = this.updatePersonalInfoReset.bind(this);\n    this.printPDF = this.printPDF.bind(this);\n  }\n  addEducation() {\n    this.setState(\n      {\n        education: this.state.education.concat({\n          id: uniqid(),\n          university: \"\",\n          city: \"\",\n          degree: \"\",\n          subject: \"\",\n          from: \"\",\n          to: \"\",\n        }),\n      },\n      () => console.log(this.state.education)\n    );\n  }\n  updateEducation(educ, id) {\n    this.setState(\n      {\n        education: this.state.education.map((e) => {\n          if (e.id === id) {\n            return Object.assign(e, educ);\n          }\n          return e;\n        }),\n      },\n      () => console.log(this.state.education)\n    );\n  }\n  deleteEducation(id) {\n    const newEducation = this.state.education.filter((ed) => ed.id !== id);\n    this.setState({\n      education: newEducation,\n    });\n  }\n  addExperience() {\n    this.setState(\n      {\n        experience: this.state.experience.concat({\n          id: uniqid(),\n          position: \"\",\n          company: \"\",\n          city: \"\",\n          from: \"\",\n          to: \"\",\n        }),\n      },\n      () => console.log(this.state.experience)\n    );\n  }\n\n  updateExperience(exp, id) {\n    console.log(exp, id);\n    this.setState(\n      {\n        experience: this.state.experience.map((e) => {\n          if (e.id === id) {\n            return Object.assign(e, exp);\n          }\n          return e;\n        }),\n      },\n      () => console.log(this.state.experience)\n    );\n  }\n  deleteExperience(id) {\n    const newExperience = this.state.experience.filter((ed) => ed.id !== id);\n    this.setState({\n      experience: newExperience,\n    });\n  }\n  updatePersonalInfo(info) {\n    this.setState(\n      {\n        personalInfo: Object.assign(this.state.personalInfo, info),\n      },\n      () => console.log(this.state.personalInfo)\n    );\n  }\n  resetAllFields() {\n    this.setState({\n      personalInfo: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNum: \"\",\n        address: \"\",\n        description: \"\",\n        photo: \"\",\n      },\n    });\n    this.setState({\n      education: [\n        {\n          id: uniqid(),\n          university: \"\",\n          city: \"\",\n          degree: \"\",\n          subject: \"\",\n          from: \"\",\n          to: \"\",\n        },\n      ],\n    });\n    this.setState({\n      experience: [\n        {\n          id: uniqid(),\n          position: \"\",\n          company: \"\",\n          city: \"\",\n          from: \"\",\n          to: \"\",\n        },\n      ],\n    });\n    this.setState({\n      personalInfoReset: true,\n    });\n  }\n  updatePersonalInfoReset(val) {\n    this.setState({\n      personalInfoReset: val,\n    });\n  }\n  printPDF() {\n    this.setState({\n      print: !this.state.printPDF,\n    });\n  }\n  render() {\n    return (\n      <>\n        <CssBaseline />\n        <Header />\n        <Container elavation={5} maxWidth=\"md\">\n          <PersonalInfo\n            updatePersonalInfo={this.updatePersonalInfo}\n            personalInfo={this.state.personalInfo}\n            personalInfoReset={this.state.personalInfoReset}\n            updatePersonalInfoReset={this.updatePersonalInfoReset}\n          />\n          <Box mt={5}>\n            <Box style={{ marginBottom: \"-1rem\" }}>\n              <Typography variant=\"h5\">Education</Typography>\n            </Box>\n            {this.state.education?.map((e) => (\n              <Education\n                key={e.id}\n                education={e}\n                deleteEducation={this.deleteEducation}\n                updateEducation={this.updateEducation}\n              />\n            ))}\n          </Box>\n          <Box mt={4}>\n            <Button\n              style={{\n                padding: \".7rem\",\n                marginTop: \"0rem\",\n                backgroundColor: \"#222\",\n              }}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.addEducation}\n            >\n              Add\n            </Button>\n          </Box>\n\n          <Box mt={5}>\n            <Box style={{ marginBottom: \"-1rem\" }}>\n              <Typography variant=\"h5\">Experience</Typography>\n            </Box>\n            {this.state.experience?.map((e) => (\n              <Experience\n                key={e.id}\n                experience={e}\n                deleteExperience={this.deleteExperience}\n                updateExperience={this.updateExperience}\n              />\n            ))}\n          </Box>\n          <Box mt={4}>\n            <Button\n              style={{ padding: \".7rem\", backgroundColor: \"#222\" }}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.addExperience}\n            >\n              Add\n            </Button>\n          </Box>\n          <Box mt={5}>\n            <Box>\n              <Button\n                style={{ padding: \".7rem\", backgroundColor: \"darkred\" }}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.resetAllFields}\n              >\n                Reset\n              </Button>\n            </Box>\n          </Box>\n          <Box mt={1}>\n            <>\n              <ReactToPrint content={() => this.componentRef}>\n                <PrintContextConsumer>\n                  {({ handlePrint }) => (\n                    <Button\n                      style={{ padding: \".7rem\", backgroundColor: \"green\" }}\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handlePrint}\n                    >\n                      Generate PDF\n                    </Button>\n                  )}\n                </PrintContextConsumer>\n              </ReactToPrint>\n              <Cv\n                education={this.state.education}\n                experience={this.state.experience}\n                personalInfo={this.state.personalInfo}\n                ref={(el) => (this.componentRef = el)}\n              />\n            </>\n          </Box>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n/**\n *\n *  APP\n *    PersonalInformation\n *    Education\n *    Experience\n *    CV\n *\n */\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}